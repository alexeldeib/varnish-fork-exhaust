apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name varnish
  labels:
    app: *name
spec:
  replicas: 2
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      # tolerations:
      #   - key: "node-role.kubernetes.io/master"
      #     operator: "Exists"
      #
      # # above OR below needed ONLY, not both
      # #
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: node-role.kubernetes.io/master
      #           operator: Exists
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - varnish
            topologyKey: kubernetes.io/hostname
      hostNetwork: false
      hostPID: false
      containers:
      - image: docker.io/alexeldeib/varnish:7.2.1
        imagePullPolicy: Always
        name: varnish
        env:
        - name: VARNISH_HTTP_PORT
          value: "8080"
        - name: THREAD_POOL
          value: "25"
        - name: THREAD_POOL_MIN
          value: "5000"
        - name: THREAD_POOL_MAX
          value: "5000"
        #command: ["sleep", "infinity"]
        resources:
          requests: {}
          limits: {}
        #securityContext:
        #  capabilities:
        #    add: ["CAP_NET_BIND_SERVICE"]
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 4443
          name: https
          #privileged: true
          #capabilities:
          #  add: ["SYS_PTRACE", "SYS_RAWIO"]
